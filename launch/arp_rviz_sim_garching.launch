<?xml version="1.0"?>
<!-- Provided by sleutene for convenience -->
<launch>
  <!-- Launch simulator. -->
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find sjtu_drone)/launch/simple.launch">
    <arg name="world_name" value="$(find sjtu_drone)/worlds/garching_kitchen.world"/>
  </include>
  
  <!-- Emulate controller parameters-->
  <group ns="ardrone_driver">
    <param name="euler_angle_max" value="0.21" />
    <param name="control_vz_max" value="700" />
    <param name="control_yaw" value="1.75" />
  </group>

  <!-- Launch visualisation. -->
  <!--node pkg="rviz" type="rviz" name="rviz" args="-d $(find ardrone_practicals)/config/rviz_vi_ekf.rviz"/-->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ardrone_practicals)/config/rviz_control.rviz"/>

  <!-- Set Log Level, possible levels: debug, info, warn, error, fatal -->
  <node pkg="rosservice" type="rosservice" name="set_node_log_level" 
      args="call /arp_node/set_logger_level '{logger: 'ros.ardrone_practicals', level: 'info'}'" />
  <node pkg="rosservice" type="rosservice" name="set_log_level" 
      args="call /arp_node/set_logger_level '{logger: 'ros.ardrone_practicals.custom', level: 'info'}'" />

  <!-- Launch estimator / control arp_node. -->
  <node name="arp_node" pkg="ardrone_practicals" type="arp_node"
      output="screen" args="log_level:=debug">
    <remap from="ardrone/front/image_raw" to="drone/front_camera/image_raw"/>
    <remap from="ardrone/imu" to="drone/imu"/> 
    <remap from="ardrone/takeoff" to="drone/takeoff"/> 
    <remap from="ardrone/reset" to="drone/reset"/>
    <remap from="ardrone/land" to="drone/land"/> 
    <remap from="ardrone/navdata" to="drone/navdata"/> 

    <!-- Global Variables -->
    <param name="enableFusion" type="bool" value="true" /> <!-- enable sensor fusion with Kalman -->
    <param name="camModel" type="bool" value="false" /> <!-- enable undistortion model -->
    <param name="displayKeypoints" type="bool" value="true" /> <!-- show matched keypoints on screen -->
    <param name="displayAllKeypoints" type="bool" value="false" /> <!-- show (all) found keypoints-->
    <param name="poseLostThreshold" value="100" /> <!-- Counter how long pose can be lost until returning to manual mode, set to 0 to disable -->
    <param name="poseSwitchThreshold" value="5" /> <!-- Counter how often drone can loose pose until returning to manual mode, set to 0 to disable -->
    <param name="poseLostTimeThreshold" value="2" /> <!-- allowed Time between pose status changes, returns to manual mode after that, set to 0 to disable -->
    <param name="ImageWidth" value="1920" /> <!-- width for scaling of camera image -->
    <param name="ImageHeight" value="960" /> <!-- height for scaling of camera image -->
    <param name="fontScaling" value="1.5" /> <!-- font scaling for text on camera image -->
    <param name="gridSize" type="int" value="5" /> <!-- granularity of path planner, unit = 10cm -->

    <!-- Yaw Rate Control -->
    <param name="calcYawRate" type="bool" value="true" /> <!-- orient drone to look into the room -->
    <param name="flyForward" type="bool" value="true" /> <!-- orient drone to next waypoint -->
    <param name="lookFixedPointOrientation" type="bool" value="true" /> <!-- orient drone to fix point -->
    <rosparam param="lookFixedOrientationPoint">[-1, -1.5, 0.0]</rosparam> <!-- point to orient the drone to -->

    <!-- PID Parameters -->
    <rosparam param="xControlParams">[0.15, 0.005, 0.01]</rosparam> <!-- Kp, Ki, Kd for the pid controller -->
    <rosparam param="yControlParams">[0.15, 0.005, 0.01]</rosparam> <!-- Kp, Ki, Kd for the pid controller -->
    <rosparam param="zControlParams">[0.95, 0.01, 0.05]</rosparam> <!-- Kp, Ki, Kd for the pid controller -->
    <rosparam param="yawControlParams">[1.75, 0.01, 0.0]</rosparam> <!-- Kp, Ki, Kd for the pid controller -->

    <!-- Frontend Parameters -->
    <param name="numKeypoints" type="int" value="2000" /> <!-- number of keypoints to generate by brisk detector -->
    <param name="mapFocalLength" value="185.6909" /> <!-- focal length with which the map was created -->
    <param name="Brisk_uniformityRadius" value="35" /> <!-- distance between two detectable keypoints -->
    <param name="Brisk_absoluteThreshold" value="100" /> <!-- threshold to consider point as a keypoint -->
    <param name="distanceThres" value="60.0" /> <!-- default 60.0, threshold for hamming distance in landmark matching -->
    <param name="skipThresInit" value="3" /> <!-- default 1, value to skip every nth landmark for faster matching -->
    <param name="skipThresLimit" value="3" /> <!-- default 4, max value to skip landmarks for faster matching -->

    <!-- Ransac Parameters -->
    <param name="useExtrinsicGuess" type="bool" value="false" /> <!-- default false, uses provided rvec and tvec as initial guesses -->
    <param name="iterationsCount" type="int" value="300" /> <!-- default 300, how often ransac projects points and matches them -->
    <param name="reprojectionError" value="5.0" /> <!-- default 5.0, max. error to consider points as matched -->
    <param name="confidence" value="0.9" /> <!-- default 0.9, wanted confidence of the calculated result -->

    <!-- WaypointB -->
    <param name="waypointX" value="100" /> <!-- target waypoint X position -->
    <param name="waypointY" value="100" /> <!-- target waypoint Y position -->
    <param name="waypointZ" value="100" /> <!-- target waypoint Z position -->
    <param name="waypointYaw" value="0" /> <!-- target waypoint yaw rate -->
    <param name="waypointTolerance" value="10" /> <!-- target waypoint tolerance -->

    <!-- Camera parameters -->
    <param name="fu" value="185.6909" /> <!-- camera focal length horizontal -->
    <param name="fv" value="185.6909" /> <!-- camera focal length vertical -->
    <param name="cu" value="319.5" /> <!-- camera center pixel horizontal -->
    <param name="cv" value="179." /> <!-- camera center pixel vertical -->
    <param name="k1" value="0" /> <!-- camera distortion parameter -->
    <param name="k2" value="0" /> <!-- camera distortion parameter -->
    <param name="p1" value="0" /> <!-- camera distortion parameter -->
    <param name="p2" value="0" /> <!-- camera distortion parameter -->
    <rosparam param="T_SC">[0.0, 0.0, 1.0, 0.2, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]</rosparam>
    <!-- Make sure to match the map to the world loaded above! -->

    <param name="map" value="okvis2-slam-final_map_garching_new2.csv" /> <!-- map of the simulated world -->
    <param name="occupancymap" value="occupancy-map_garching.dat" /> <!-- map of obstacles in the world -->

  </node>

</launch>
